model OperBrandstof {
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  /// @description De primary ID van het tankbeurt
  ID Int @id @default(autoincrement())

  /// @DtoRelationCanConnectOnCreate
  /// @DtoReadOnly
  RefLid RefLid? @relation("RefLid", fields: [LID_ID], references: [ID], onUpdate: Cascade, onDelete: NoAction)

  /// @description Verwijzing naar het lid ID van de persoon die getankt heeft, link naar de leden tabel
  /// @DtoRelationIncludeId
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  LID_ID Int @db.Int

  /// @DtoReadOnly
  /// @description De naam van het lid die de tankbeurt heeft gedaan
  NAAM String @db.VarChar(255)

  /// @description Het tijdstip van de tankbeurt
  TIJDSTIP DateTime @default(now()) @db.Date

  /// @DtoRelationCanConnectOnCreate
  /// @DtoReadOnly
  BrandstofType RefType? @relation("BrandstofType", fields: [BRANDSTOF_TYPE_ID], references: [ID], onUpdate: Cascade, onDelete: NoAction)

  /// @description Type brandstof dat getankt is
  /// @DtoRelationIncludeId
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  BRANDSTOF_TYPE_ID Int? @db.Int

  /// @description Prijs per liter van de brandstof
  PRIJS Float? @db.Float

  /// @description Het bedrag van de tankbeurt om te kunnen factureren
  BEDRAG Float? @db.Float

  /// @description Aantal liters dat getankt is
  LITERS Float? @db.Float

  /// @description Externe referentie van de tankbeurt
  /// @maxLength 50
  EXT_REF String? @db.VarChar(50)

  /// @DtoReadOnly
  /// @description Is het record gemarkeerd als verwijderd
  VERWIJDERD Boolean @default(false) @db.TinyInt

  /// @DtoReadOnly
  /// @description Tijdstempel met de laatste wijziging van het record
  LAATSTE_AANPASSING DateTime @default(now()) @updatedAt

  @@index([VERWIJDERD])
  @@index([TIJDSTIP])

  @@map("oper_brandstof")
}
